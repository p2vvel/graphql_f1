apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-hasura
    hasuraService: custom
  name: {{ .Release.Name }}-hasura
  namespace: default
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-hasura
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-hasura
    spec:
      containers:
      - image: hasura/graphql-engine:latest.cli-migrations-v3.ubuntu
        imagePullPolicy: IfNotPresent
        name: hasura
        resources:
          requests:
            memory: {{ .Values.hasura.memoryMin | quote }}
            cpu: {{ .Values.hasura.cpuMin | quote }}
          limits:
            memory: {{ .Values.hasura.memoryMax | quote }}
        env:
        # admin secret, allows for console access and metadata changes
        - name: HASURA_GRAPHQL_ADMIN_SECRET
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-chart-config
              key: hasura.adminSecret
        # hardcoded in config, cannot be changed, allows for unauthorized read access to api
        - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
          value: anonymous
        {{ if .Values.hasura.console -}}
        # enable the console endpoint
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          value: "true"
        {{- end -}}
        {{ if .Values.hasura.devMode }}
        # enable debugging mode. It is recommended to disable this in production
        - name: HASURA_GRAPHQL_DEV_MODE
          value: "true"
        {{- end }}
          
        - name: HASURA_GRAPHQL_DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-chart-config
              key: dbMetadata.url

        - name: HASURA_F1_DB
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-chart-config
              key: dbF1.url

        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
